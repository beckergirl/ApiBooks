{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UsuariosService {\n  constructor(http) {\n    this.http = http;\n    this.url = \"http://localhost:4000/usuarios\";\n    this.logueado = false; // aquí controlaremos con true y false si el usuario a iniciado sesión en la app.\n  }\n\n  register(usuarios) {\n    return this.http.post(this.url + \"/registro\", usuarios); // funcionan en postman\n  }\n\n  login(usuarios) {\n    return this.http.post(this.url + \"/login\", usuarios); // funcionan en postman\n  }\n  //////////////////////////////////////////////////////\n  getUsuario(id_usuario) {\n    return this.http.get(this.url + \"/\" + id_usuario);\n  }\n  postUsuario(newUser) {\n    return this.http.post(this.url, newUser);\n  }\n  getUsuarios() {\n    return this.http.get(this.url);\n  }\n  delUsuario(id_usuario) {\n    console.log(id_usuario);\n    //const httpOptions = {headers: new HttpHeaders({ 'Content-Type': 'application/json' }), body: id}\n    const httpOptions = {\n      headers: null,\n      body: id_usuario\n    };\n    return this.http.delete(this.url, httpOptions);\n  }\n  static #_ = this.ɵfac = function UsuariosService_Factory(t) {\n    return new (t || UsuariosService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UsuariosService,\n    factory: UsuariosService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,eAAe;EAO1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IALhB,QAAG,GAAG,gCAAgC;IAQ5C,IAAI,CAACC,QAAQ,GAAG,KAAK,CAAC,CAAC;EACzB;;EAEOC,QAAQ,CAACC,QAAiB;IAE/B,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,IAAI,CAACC,GAAG,GAAG,WAAW,EAAEF,QAAQ,CAAC,CAAC,CAAC;EAC3D;;EAEOG,KAAK,CAACH,QAAiB;IAE5B,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,IAAI,CAACC,GAAG,GAAG,QAAQ,EAACF,QAAQ,CAAC,CAAC,CAAE;EACxD;EAEA;EAEAI,UAAU,CAACC,UAAkB;IAE3B,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAC,IAAI,CAACJ,GAAG,GAAG,GAAG,GAAGG,UAAU,CAAC;EACnD;EAEAE,WAAW,CAACC,OAAgB;IAE1B,OAAO,IAAI,CAACX,IAAI,CAACI,IAAI,CAAC,IAAI,CAACC,GAAG,EAAEM,OAAO,CAAC;EAC1C;EACAC,WAAW;IAET,OAAO,IAAI,CAACZ,IAAI,CAACS,GAAG,CAAC,IAAI,CAACJ,GAAG,CAAC;EAChC;EAEAQ,UAAU,CAACL,UAAc;IAEvBM,OAAO,CAACC,GAAG,CAACP,UAAU,CAAC;IACvB;IACA,MAAMQ,WAAW,GAAG;MAACC,OAAO,EAAE,IAAI;MAAEC,IAAI,EAAEV;IAAU,CAAC;IACrD,OAAO,IAAI,CAACR,IAAI,CAACmB,MAAM,CAAC,IAAI,CAACd,GAAG,EAAEW,WAAW,CAAC;EAChD;EAAC;qBA7CUlB,eAAe;EAAA;EAAA;WAAfA,eAAe;IAAAsB,SAAftB,eAAe;IAAAuB,YAFd;EAAM","names":["UsuariosService","constructor","http","logueado","register","usuarios","post","url","login","getUsuario","id_usuario","get","postUsuario","newUser","getUsuarios","delUsuario","console","log","httpOptions","headers","body","delete","factory","providedIn"],"sourceRoot":"","sources":["/Users/MiGo/Desktop/myBOOKS/Front/src/app/shared/usuarios.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Usuario } from '../models/usuario';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuariosService {\n\n  private url = \"http://localhost:4000/usuarios\"\n\n  public usuarios: Usuario;/*  public usuarios: Usuario; (en reto 3) sin array*/\n  public logueado: boolean; // public logueado:boolean (reto3)\n\n  constructor(private http: HttpClient){ \n\n \n    this.logueado = false; // aquí controlaremos con true y false si el usuario a iniciado sesión en la app.\n  }\n\n  public register(usuarios: Usuario){ //método que llamará al endpoint Post\"/registro\"\n\n    return this.http.post(this.url + \"/registro\", usuarios); // funcionan en postman\n  }\n\n  public login(usuarios: Usuario){ //método para llamar al endpoint post\"/login\"\n\n    return this.http.post(this.url + \"/login\",usuarios);  // funcionan en postman\n  }\n\n  //////////////////////////////////////////////////////\n\n  getUsuario(id_usuario: number){\n\n    return this.http.get(this.url + \"/\" + id_usuario);\n  }\n\n  postUsuario(newUser: Usuario){\n\n    return this.http.post(this.url, newUser);\n  }\n  getUsuarios(){\n\n    return this.http.get(this.url)\n  }\n\n  delUsuario(id_usuario:any){\n\n    console.log(id_usuario);\n    //const httpOptions = {headers: new HttpHeaders({ 'Content-Type': 'application/json' }), body: id}\n    const httpOptions = {headers: null, body: id_usuario}\n    return this.http.delete(this.url, httpOptions)\n  }\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}